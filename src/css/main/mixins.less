/*---------------------------------------------------
     LESS mixins
  ---------------------------------------------------*/
  @import '../../bower_components/homeless/dist/home.less';

.clear(@position: after ){
			.if(@position eq both, {
				.then()  {
					&:after, &:before  {
					    content: '';
					    clear: both;
					    width: 100%;
					    display: block;
					    height: 0;
					}
				}
				.else()  {
					&:@{position}  {
					    content: '';
					    clear: both;
					    width: 100%;
					    display: block;
					    height: 0;
					}
				}
		
	});


}
.fixEditable() {
        .b-editable  {
        padding: 2rem;
        p,h3 {
            margin: 0;
        }
	}
}
.fullContain() {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;	
}
.center() {
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
 
 }

.scale(@ratio: 1.5) {
    .transform(scale(@ratio));
}

 .transitionfix() {
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0)
}

.placeholder(@color: @white) {
    ::-webkit-input-placeholder {
        color: @color;
    }
    :-moz-placeholder {
        color: @color;
        opacity: 1;
    }
    ::-moz-placeholder {
        color: @color;
        opacity: 1;
    }
    :-ms-input-placeholder {
        color: @color;
    }
}
.negativeMargin(@margin : .5rem) {
	    margin-left: -@margin;
        margin-right: -@margin;
        width: auto;

        > * {
            padding-left: @margin;
            padding-right: @margin;
        }
}

.hasSidebar(@float: right, @width: 20rem) {
	.clear(after);

	.main, .content  {
		box-sizing: border-box;
	
	@media all and (min-width:  (@tablet_width + @scroll_bar))  {
		width: calc(~'100%' - @width);

			.if(@float eq left, {

				.then()  {
					float: right;
				}
				.else()  {
					float: left;
				}
		
	});
}
		.sidebar, .rightcol, .leftcol {
			width: @width;
		}

		.sidebar {
			float: @float;

		}
	}

}
.cols(@number: 4) {

	list-style: none;
    padding: 0;
    width: 100%;
    margin:1rem 0;
    .clear(after);

	> *  {
	display: inline-block;
	box-sizing: border-box;
	float: left; 
	width: 100%;
	
		@media all and (min-width: (@mobile_width + @scroll_bar)) {
			.if(@number gte @show_col_mobile,  {
				.then(){
					width: 100% / @show_col_mobile;
					}
			});	
		}

		@media all and (min-width: (@tiny_width + @scroll_bar)) {
			.if(@number gte @show_col_tiny,  {
				.then(){
				width: 100% / @show_col_tiny;
				}
			});
		}

		@media all and (min-width: (@tablet_width + @scroll_bar)) {
			.if(@number gte @show_col_tablet,  {
				.then(){
				width: 100% / @show_col_tablet;
				}
			});

		}
		@media all and (min-width: (@small_width + @scroll_bar)) {
			.if(@number gte @show_col_small,  {
				.then(){
				width: 100% / @show_col_small;
				}
			});
		}	
		@media all and (min-width: (@medium_width + @scroll_bar)) {
			.if(@number gte @show_col_medium,  {
				.then(){
				width: 100% / @number;
				}
			});
		}
	}
}
.box(@bgColor: transparent, @color: transparent, @size: 0px ) {
    border: @size solid @color;
    background-color: @bgColor;
    margin-bottom: 1rem;
}

.button(@cbgColor: transparent, @textColor: @black) {
    .box(@cbgColor, @textColor, 0);
    color: @textColor;
	padding: .5rem;

    html.js &  {
        transition:.2s, ease-in;
    }   

    &:hover {

        color: @white;
        background-color: @hoverColor;
        border-color: @hoverColor;
        cursor: pointer;
    }
}

.gradient(@from: left, @to: to right, @startColor: rgba(0,0,0,1), @direction: 1) {
	background: -moz-linear-gradient(@from,  @startColor 0%, rgba(0,0,0,0) 100%); 
	background: -webkit-linear-gradient(@from,  r@startColor 0%,rgba(0,0,0,0) 100%); 
	background: linear-gradient(@to,  @startColor 0%,rgba(0,0,0,0) 100%); 
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#00000000',GradientType=@direction ); 
}

.highlightBreaks(@element: body) {

	 @{element} {
		@media all and (min-width: (@mobile_width + @scroll_bar)) {
		        background: @colorMobile; /* Orange */
		}

		@media all and (min-width: (@tiny_width + @scroll_bar)) {
		        background: @colorTiny; /* Yellowish */
		}

		@media all and (min-width: (@tablet_width + @scroll_bar)) {
		        background: @colorTablet; /*Faded Crimsons*/
		}

		@media all and (min-width: (@small_width + @scroll_bar)) {
		        background: @colorSmall; /* Pink? */
		}

		@media all and (min-width: (@medium_width + @scroll_bar)) {
		        background: @colorMedium; /* Blue */
		}      

		@media all and (min-width: (@large_width  + @scroll_bar)) {
		        background: @colorBig; /* Greenish */
		}
	}
}